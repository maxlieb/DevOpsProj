# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: maxlieb/dadjokes-api

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Generate tags and labels (latest + short SHA + branch)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=ref,event=branch
          labels: |
            org.opencontainers.image.title=dadjokes-api
            org.opencontainers.image.source=${{ github.repository }}

      # Build once and load into the local Docker daemon to run tests
      - name: Build (load for tests)
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_NAME }}:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run container (for health check)
        run: |
          SUFFIX=$(openssl rand -hex 4)
          echo "NTFY_TOPIC=dadjokes-api-ci-test-${SUFFIX}" >> $GITHUB_ENV
          docker run -d --rm \
            -p 5000:5000 \
            --name dadjokes-container \
            -e NTFY_TOPIC="dadjokes-api-ci-test-${SUFFIX}" \
            ${{ env.IMAGE_NAME }}:ci

      - name: Wait for app & test /health
        run: |
          echo "Using NTFY_TOPIC=${NTFY_TOPIC}"
          for i in {1..20}; do
            if curl -fsS http://localhost:5000/health; then
              echo "Health check passed"
              exit 0
            fi
            echo "Waiting for app... ($i/20)"; sleep 1
          done
          echo "Health check FAILED"; docker logs dadjokes-container || true; exit 1

      - name: Stop container
        if: always()
        run: docker stop dadjokes-container || true

      # Log in to Docker Hub (requires repo secrets)
      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build again (using cache) and push with proper tags/labels
      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Show published tags
        run: echo "${{ steps.meta.outputs.tags }}"

